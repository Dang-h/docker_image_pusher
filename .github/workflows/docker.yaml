name: Docker

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:
  build:
    name: Pull and Push
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Check out code
      uses: actions/checkout@v3

    - name: Login to Aliyun Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ALIYUN_REGISTRY }}
        username: ${{ env.ALIYUN_REGISTRY_USER }}
        password: ${{ env.ALIYUN_REGISTRY_PASSWORD }}

    - name: Build and push image Aliyun
      run: |
        while IFS= read -r line; do
          [[ -z "$line" ]] && continue
          echo "Processing image: $line"
          
          # 获取镜像的完整名称
          image=$(echo "$line" | awk '{print $NF}')
          # 获取镜像名:版本号
          image_name_tag=$(echo "$image" | awk -F'/' '{print $NF}')
          # 构建新的镜像名称
          new_image="$ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$image_name_tag"
          
          # 创建一个临时的 Dockerfile
          echo "FROM --platform=linux/amd64 $image as amd64" > Dockerfile.multi
          echo "FROM --platform=linux/arm64 $image as arm64" >> Dockerfile.multi
          
          # 使用 buildx 构建并推送多架构镜像
          docker buildx build \
            --platform linux/amd64 \
            --tag $new_image \
            --file Dockerfile.multi \
            --push .
            
          echo "Successfully processed and pushed: $new_image"
        done < images.txt
